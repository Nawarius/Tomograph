[{"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\index.js":"1","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\App.js":"2","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\reportWebVitals.js":"3","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\Components\\SceneContainer.jsx":"4","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\Components\\ScenePresent.jsx":"5","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\createDefaultGUIText.js":"6","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\loadMesh.js":"7","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\setMovesAndTimesToFile.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2118,"mtime":1610978293749,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":7199,"mtime":1610978980924,"results":"13","hashOfConfig":"10"},{"size":1496,"mtime":1610745655770,"results":"14","hashOfConfig":"10"},{"size":625,"mtime":1610716003972,"results":"15","hashOfConfig":"10"},{"size":616,"mtime":1610743227035,"results":"16","hashOfConfig":"10"},{"size":1491,"mtime":1610979202981,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1o1k3pk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\index.js",[],["36","37"],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\App.js",[],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\reportWebVitals.js",[],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\Components\\SceneContainer.jsx",["38","39","40","41","42","43","44","45","46","47","48","49"],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\Components\\ScenePresent.jsx",["50","51"],"import { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\nexport default (props) => {\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n    \r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene, engine)\r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} style ={{position:'absolute', width:'100%', height:'100%'}}/>\r\n    );\r\n}","D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\createDefaultGUIText.js",[],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\loadMesh.js",[],"D:\\Frontend Projects\\DefaultTomograph\\defaulttomograph\\src\\helpers\\setMovesAndTimesToFile.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":60,"column":34,"nodeType":"58","messageId":"59","endLine":60,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":61,"column":38,"nodeType":"58","messageId":"59","endLine":61,"endColumn":40},{"ruleId":"56","severity":1,"message":"57","line":61,"column":60,"nodeType":"58","messageId":"59","endLine":61,"endColumn":62},{"ruleId":"56","severity":1,"message":"57","line":66,"column":45,"nodeType":"58","messageId":"59","endLine":66,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":66,"column":67,"nodeType":"58","messageId":"59","endLine":66,"endColumn":69},{"ruleId":"56","severity":1,"message":"57","line":76,"column":33,"nodeType":"58","messageId":"59","endLine":76,"endColumn":35},{"ruleId":"56","severity":1,"message":"60","line":97,"column":22,"nodeType":"58","messageId":"59","endLine":97,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":134,"column":26,"nodeType":"58","messageId":"59","endLine":134,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":152,"column":22,"nodeType":"58","messageId":"59","endLine":152,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":154,"column":33,"nodeType":"58","messageId":"59","endLine":154,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":162,"column":33,"nodeType":"58","messageId":"59","endLine":162,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":175,"column":22,"nodeType":"58","messageId":"59","endLine":175,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":3,"column":1,"nodeType":"63","endLine":39,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":35,"column":8,"nodeType":"66","endLine":35,"endColumn":21,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"73","text":"74"},[1350,1363],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]